syntax = "proto3";
package game.mod.proc.yf.proto.res;

// 指令：protoc --go_out=. ./proto_data/*.proto
option go_package = "./shared/res";

// 基本信息 (MDM_USER-SUB_USER_REQ__SIT => MDM_GAME-S2C_ENTER_INFO)
message EnterInfo {
    // 协议版号
    string protoVersion = 1;
    // 玩家资料
    UserData self = 2; // 暂时放置 EnterRoom，以后会再移走。
    // 玩家登入时间
    int64 userLoginTime = 3;
    // 遊戲相關設定
    repeated GameConfig gameConfigs = 4;
    // 瓦力遊戲清單
    repeated WaliGameConfig waligameConfigs = 5;
}

    // 登入后给玩家资料
    message UserData {
        int64 userId = 1; // 用户id
        int64 score = 2; // 身上的钱
    }

    message GameConfig {
        int32 miniGameId = 1;
        repeated BetAreaConfig betAreaConfigs = 2;
    }

    message BetAreaConfig {
        int32 areaCode = 1;
        string name = 2;
        repeated float odds = 3;
        int32 minLimit = 4;
        int32 maxLimit = 5;
    }

    message WaliGameConfig{
        int32 gametype=1;
        string name=2;
        string url=3;
        string icon=4;
    }

// 直播间资讯 (MDM_GAME-C2S_ENTER_GROUP => MDM_GAME-S2C_GROUP_INFO)
message GroupInfo {
    // 小游戏资讯
    repeated MiniGameBasicInfo miniGameBasicInfoList = 1; // 僅傳送直播主預設的遊戲
}

    message MiniGameBasicInfo {
        // 小游戏 id
        int32 miniGameId = 1;
        // 当前所处阶段：1.下注 2.结算, 3.發牌中
        int32 stage = 2;
        // 当前阶段剩余时间倒计时(ms)
        int32 countDown = 3;
        // 小游戏名称
        string name = 4;
        // 2024.10.22 改到enterminigame info
//        // 开奖纪录(若进场时为结算阶段, 则包含此局结果)
//        Trend trend = 5;
        RoundInfo lastRoundInfo = 6; // 上一局的開獎結果, 服務器剛開時為空
    }

        // 开奖历史
        message Trend {
            repeated RoundInfo roundInfoList = 1;
        }

            // 开奖资讯（通用格式定义，能符合未来新游戏的扩充）
            message RoundInfo {
                // 期号
                string roundId = 1;
                // 牌面种类
                int32 elementType = 2; // 1:扑克牌, 2:麻将牌, 3:天九牌, 4:骰子...
                // 表演资讯
                repeated ActorPerform performs = 3;
                repeated int32 roundPerformResult = 5; // 表演的全局資訊

                // 2024.05.23 企劃說讓前端自己讀錶處理
//                // 获胜注区列表：(内容数值定义：注区ID)
//                repeated int32 winAreaCodes = 4;
            }

                message ActorPerform {
                    // 牌面
                    repeated int32 elements = 1; // (根据elementType决定)
                    // 牌型
                    repeated int32 patterns = 2; // (根据miniGameId决定) 牛牛, 铁支
                    // 结果
                    repeated int32 performResult = 3; // (根据miniGameId决定) 0:undefined, 1:胜, 2:败, 3:和
                }

// 小游戏资讯 (MDM_GAME-C2S_ENTER_MINI_GAME => MDM_GAME-S2C_ENTER_MINI_GAME_INFO)
message EnterMiniGameInfo {
    // 小游戏 id
    int32 miniGameId = 1;
    string roundId = 2;
    repeated AreaBet areaBets = 4; // 全部注区的下注信息(含自己)
    repeated AreaBet myAreaBets = 5; // 我自己的下注信息
    // 当前所处阶段：1.下注 2.结算
    int32 stage = 6;
    // 当前阶段剩余时间倒计时(ms)
    int32 countDown = 7;
    // 第几局
    int32 deckRound = 8;
    // 开奖纪录(若进场时为结算阶段, 则包含此局结果)
    Trend trend = 9;

    // --- 結算階段時要給以下信息 --- //
    // 玩家自己押注输赢结果
    repeated SettleResult mySettleResult = 10;
    // 輸贏金額
    int32 winScore = 11;
    // 获胜注区列表
    repeated int32 winAreaCodes = 12;

    // 2024.05.23 企劃說讓前端自己讀錶處理
//    repeated AreaType areaTypes = 2; // 注区分类表
//    repeated AreaInfo areaInfoList = 3; // 每个注区的设定
}
    // 2024.05.23 企劃說讓前端自己讀錶處理
//    message AreaType{
//        int32 type = 1;
//        string typeName = 2;
//    }

    // 注区资讯
    message AreaInfo {
        int32 areaCode = 1; // 注区ID
        string name = 2; // 注区名称
        repeated int32 types = 3; // 所属注区类别
        float odds = 5; // 赔率
        int32 minLimit = 6; // 投注下限
        int32 maxLimit = 7; // 投注上限
    }

    message AreaBet{
        int32 areaCode = 1;
        int32 betScore = 2;
        int32 userCount = 3; // 下注的人数
    }

// 开始新的一轮
message BeginNewRound {
    // 小游戏 id
    int32 miniGameId = 1;
    // 当前阶段剩余时间倒计时(ms)
    int32 countDown = 2;
    // 期号
    string roundId = 3;
    // 第几局
    int32 deckRound = 4;
}

//----------------------------------------


// 下注结果
message MyMiniGameBetResult{
    // 小游戏 id
    int32 miniGameId = 1;
    // 押注资讯
    repeated BetResultInfo betResultInfoList = 2;
}
    message BetResultInfo {
        AreaBet areaBet = 1;
        int32 result = 2;// BetStatus
    }


// 同步注区下注信息
message SyncAreaBetInfo {
    // 小游戏 id
    int32 miniGameId = 1;
    repeated AreaBet areaBets = 2;
}

// 开始开牌
message BeginDeal {
    // 小游戏 id
    int32 miniGameId = 1;
    // 当前阶段剩余时间倒计时(ms)
    int32 countDown = 2;
    // 期号
    string roundId = 3;
    // 开奖资讯
    RoundInfo roundInfo = 4;
}

// 各小游结算
message BeginSettle {
    // 小游戏 id
    int32 miniGameId = 1;
    // 当前阶段剩余时间倒计时(ms)
    int32 countDown = 2;
    // 玩家自己押注输赢结果
    repeated SettleResult mySettleResult = 4;
    // 輸贏金額
    int32 winScore = 5;
    // 获胜注区列表
    repeated int32 winAreaCodes = 6;
}

    message SettleResult {
        int32 areaCode = 1; // 注区ID
        int32 betScore = 2; // 投注金額
        int32 winScore = 3; // 輸贏金額(0不傳)
    }

// 离开group
message LeaveGroup{
    string groupId = 1;
}

// 离开小游戏
message LeaveMiniGames {
    repeated int32 miniGameIds = 1; //
}

// 通知前端清除開獎紀錄
message ClearTrends {
    repeated int32 miniGameIds = 1;
}

// 刷新玩家金錢
message RefreshUserScore {
    optional int64 score = 1;
}

message RefreshGameConfig {
    repeated GameConfig gameConfigs = 1;
}

message RefreshWaliGameConfig{
    repeated WaliGameConfig waligameConfigs = 1;
}

message RefreshWaliGamePlayerCount{
    repeated int32 playerCounts = 1;
}
